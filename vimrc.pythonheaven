" https://realpython.com/vim-and-python-a-match-made-in-heaven/#syntax-checkinghighlighting
set cursorline
set hls
set nocompatible              " required
filetype off                  " required
syntax on

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'
Plugin 'tmhedberg/SimpylFold'

" add all your plugins here (note older versions of Vundle
" used Bundle instead of Plugin)

" ...

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

set splitbelow
set splitright

"split navigations
noremap <C-J> <C-W><C-J>
noremap <C-K> <C-W><C-K>
noremap <C-L> <C-W><C-L>
noremap <C-H> <C-W><C-H>

" Enable folding
set foldmethod=indent
set foldlevel=99

" Enable folding with the spacebar
nnoremap <space> za

" Try this if you want to see the docstrings for folded code:
let g:SimpylFold_docstring_preview=1

" Python Indentation
" This will give you the standard four spaces when you hit tab, ensure your
" line length doesn’t go beyond 80 characters, and store the file in a Unix
" format so you don’t get a bunch of conversion issues when checking into
" GitHub and/or sharing with other users.
au BufNewFile, BufRead *.py set tabstop=4 set softtabstop=4 set shiftwidth=4 set textwidth=79 set expandtab set autoindent set fileformat=unix

" for full stack developer
au BufNewFile, BufRead *.js, *.html, *.css set tabstop=2 set softtabstop=2 set shiftwidth=2

" autoindent will help, but in some cases (like when a function signature spans multiple lines), it doesn’t always do what you want, especially when it comes to conforming to PEP 8 standards. To fix that, you can use the indentpython.vim extension:
Plugin 'vim-scripts/indentpython.vim'

" Flagging Unnecessary Whitespace
" You also want to avoid extraneous whitespace. You can have VIM flag that for you so that it’s easy to spot and then remove:
au BufRead, BufNewFile *.py, *.pyw, *.c, *.h match BadWhitespace /\s\+$/

" encoding
set encoding=utf-8

" Auto-Complete
" Plugin 'Valloric/YouCompleteMe'
" The first line ensures that the auto-complete window goes away when you’re done with it,
" and the second defines a shortcut for goto definition.
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>


"python with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
  project_base_dir = os.environ['VIRTUAL_ENV']
  activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
  execfile(activate_this, dict(__file__=activate_this))
EOF

" Syntax Checking/Highlighting
Plugin 'vim-syntastic/syntastic'
" PEP8 checking
Plugin 'nvie/vim-flake8'

" make python code pretty
let python_highlight_all=1
syntax on

" Color schemes work in conjunction with the basic color scheme that you are
" using. Check out solarized for GUI mode, and Zenburn for terminal mode:
"if has('gui_running')
"  set background=dark
"  colorscheme solarized
"else
"  colorscheme zenburn
"endif
"
"" Solarized also ships with a dark and light theme. To make switching between
"" them very easy (by pressing F5) add:
"call togglebg#map("<F5>")

" file browsering
Plugin 'scrooloose/nerdtree'
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree

" Super Searching:  Want to search for basically anything from VIM? Check out ctrlP:
Plugin 'kien/ctrlp.vim'

" Line Numbering
set nu

" Git Integration
Plugin 'tpope/vim-fugitive'

" Powerline is a status bar that displays things like the current virtualenv,
" git branch, files being edited, and much more.
Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}

" System Clipboard
" Vim usually has its own clipboard and ignores the system keyboards, but
" sometimes you might want to cut, copy, and/or paste to/from other
" applications outside of VIM. On OS X, you can access your system clipboard
" with this line:
set clipboard=unnamed
